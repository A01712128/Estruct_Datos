#ifndef FUNCIONESORDENAMIENTO_H
#define FUNCIONESORDENAMIENTO_H

#include "Tarea.h"
#include <vector>
#include <algorithm>

// Funcion de comparacion para ordenar por importancia
bool compararPorImportancia(Tarea* t1, Tarea* t2) {
    return t1->obtenerImportancia() > t2->obtenerImportancia();
}

// Funcion de comparacion para ordenar por tiempo estimado
bool compararPorTiempoEstimado(Tarea* t1, Tarea* t2) {
    return t1->obtenerTiempoEstimado() < t2->obtenerTiempoEstimado();
}

// Funcion de ordenamiento por seleccion
void seleccionSort(std::vector<Tarea*>& tareas, bool porTiempoEstimado) {
    for (size_t i = 0; i < tareas.size() - 1; i++) {
        size_t indiceMinimo = i;
        for (size_t j = i + 1; j < tareas.size(); j++) {
            if (porTiempoEstimado) {
                if (compararPorTiempoEstimado(tareas[j], tareas[indiceMinimo])) {
                    indiceMinimo = j;
                }
            } else {
                if (compararPorImportancia(tareas[j], tareas[indiceMinimo])) {
                    indiceMinimo = j;
                }
            }
        }
        if (indiceMinimo != i) {
            swap(tareas[i], tareas[indiceMinimo]);
        }
    }
}

#endif
